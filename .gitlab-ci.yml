image: gcc

variables:
  WBRANCH: stable
  WVERSION: 3.0.1
before_script:
- export PATH="$PWD/wine/bin${PATH:+:$PATH}"
- export LD_LIBRARY_PATH="$PWD/wine/lib:$PWD/wine/lib64${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
- apt-get update
- apt-get install -y -f binutils-dev gcc-multilib

install:wine:
  stage: build
  cache:
    key: wine
    paths:
    - wine
  artifacts:
    expire_in: 1 hour
    paths:
    - wine
  script:
  - |
    if [ ! -x wine/bin/winegcc ]; then
      rm -rf wine
      mkdir -p wine
      wget -O wine-i386.deb https://dl.winehq.org/wine-builds/debian/pool/main/wine-${WBRANCH}-i386_${WVERSION}~jessie_i386.deb
      wget -O wine-amd64.deb https://dl.winehq.org/wine-builds/debian/pool/main/wine-${WBRANCH}-amd64_${WVERSION}~jessie_amd64.deb
      wget -O wine-dev.deb https://dl.winehq.org/wine-builds/debian/pool/main/wine-${WBRANCH}-dev_${WVERSION}~jessie_amd64.deb
      wget -O wine.deb https://dl.winehq.org/wine-builds/debian/pool/main/wine-${WBRANCH}_${WVERSION}~jessie_amd64.deb
      dpkg -X wine-i386.deb wine
      dpkg -X wine-amd64.deb wine
      dpkg -X wine-dev.deb wine
      dpkg -X wine.deb wine
      mv wine/opt/wine-${WBRANCH}/* wine
      rm -rf wine/opt wine/usr wine/share
    fi

build:compiler:
  stage: build
  cache:
    key: nim-compiler
    paths:
    - nim-devel
    - nim-master
  artifacts:
    expire_in: 1h
    paths:
    - nim-master/bin
    - nim-master/config
    - nim-master/lib
    - nim-devel/bin
    - nim-devel/config
    - nim-devel/lib
  script:
  - |
    for BRANCH in master devel; do
    if [ ! -x nim-$BRANCH/bin/nim ]; then
      git clone -b $BRANCH --depth 1 git://github.com/nim-lang/nim nim-$BRANCH/
      cd nim-$BRANCH
      git clone --depth 1 git://github.com/nim-lang/csources csources/
      cd csources
      sh build.sh
      cd ..
      rm -rf csources
      bin/nim c koch
      ./koch boot -d:release
      ./koch nimble
    else
      cd nim-$BRANCH
      git fetch origin
      if ! git merge FETCH_HEAD | grep "Already up-to-date"; then
        bin/nim c koch
        ./koch boot -d:release
        ./koch nimble
      fi
    fi
    cd ..
    done


test:master:
  stage: test
  dependencies:
  - build:compiler
  - install:wine
  script:
  - nim-master/bin/nim -v
  - winegcc -v
  - wine64 --version
  - make WINEGCC="$PWD/wine/bin/winegcc" NIMC="$PWD/nim-master/bin/nim" ARCH=64 precompile

test:devel:
  stage: test
  dependencies:
  - build:compiler
  - install:wine
  allow_failure: true
  script:
  - nim-devel/bin/nim -v
  - winegcc -v
  - wine64 --version
  - make WINEGCC="$PWD/wine/bin/winegcc" NIMC="$PWD/nim-devel/bin/nim" ARCH=64 precompile
